
import hashlib
import requests
import json

# 推资产
var_method1 = 'extend.yidong.asset.create'
# 推合同
var_method2 = 'extend.yidong.contract.create'

var_channel = 'test07'
var_content
var_flowNo = '201200007'
var_method = var_method1
var_time = '20210430154937'
var_version = '1.0.1'

def pinChuan():
      chuan = ('IUY9JiCa35ktBHKrJaS3s+Q49GRXtbaW'
            'channel{}channel'
            'content{}content'
            'flowNo{}flowNo'
            'method{}method'
            'time{}time'
            'version{}version'
            'IUY9JiCa35ktBHKrJaS3s+Q49GRXtbaW'.format(var_channel,var_content,var_flowNo,var_method,var_time,var_version))
      print(chuan)
      return chuan


def AddMD5():
      str = pinChuan()
      # print("str:" + str)

      # 创建md5对象
      m = hashlib.md5()

      # Tips
      # 此处必须encode
      # 若写法为m.update(str)  报错为： Unicode-objects must be encoded before hashing
      # 因为python3里默认的str是unicode
      # 或者 b = bytes(str, encoding='utf-8')，作用相同，都是encode为bytes
      b = str.encode(encoding='utf-8')
      m.update(b)
      str_md5 = m.hexdigest()

      # print('MD5加密前为 ：' + str)
      # print('MD5加密后为小写 ：' + str_md5)

      # 另一种写法：b‘’前缀代表的就是bytes
      # str_md5 = hashlib.md5(b str).hexdigest()
      print('MD5加密后为大写 ：' + str_md5.upper())
      return str_md5.upper()

def qq():
      header = {'Content-Type':'application/json;charset=UTF-8',
                'User-Agent': 'Apache-HttpClient/4.5.5 (Java/1.8.0_121)','Connection':'keep-alive'}
      url = 'https://test-api-yidong.lianjieabs.com/external/resources'

      data = {
          "flowNo": var_flowNo,
          "content": var_content,
          "time": var_time,
          "method": var_method,
          "channel": var_channel,
          "version": var_version,
          "sign": AddMD5()
      }

      r = requests.post(url=url,data=json.dumps(data) ,headers=header)


      print(r.text)