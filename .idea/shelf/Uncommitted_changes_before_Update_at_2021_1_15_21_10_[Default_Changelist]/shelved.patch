Index: python接口测试/demo.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/usr/bin/env python \r\n\"\"\"\r\n@author:闫学雷\r\n@project:PythonYan\r\n@file: demo.py\r\n@time:2021/1/7 0007\r\n\"\"\"\r\n\r\nimport requests\r\nimport json\r\n# get请求\r\n\r\n# url = 'http://www.baidu.com'\r\n# r = requests.get(url=url)\r\n# print(r.status_code)\r\n\r\n# post 请求\r\nbase_url = ' http://loan-api-link.asset.jc4.jieyue.com'\r\napi = '/loan-api-link/api/appbiz/LoanEasyRest/1118/v1'\r\nurl = base_url + api\r\nheader = {'Content-Type': 'application/json;charset=UTF-8',\r\n          'User-Agent': 'Apache-HttpClient/4.5.5 (Java/1.8.0_121)',\r\n          }\r\ndata = {\r\n    \"sysSource\": \"4\",\r\n    \"frontTransNo\": \"20210107221401599\",\r\n    \"frontTransTime\": \"2019-07-18 15:15:20\",\r\n    \"interfaceNo\": \"1118\",\r\n    \"busiCode\": \"CSB18\",\r\n    \"telephone\": \"13916263326\",\r\n    \"appAmount\": \"30000\",\r\n    \"appPeriod\": \"24\",\r\n    \"custmerManger\": \"11037385\",\r\n    \"position\": \"301000817\",\r\n    \"telemarketing\": \"0\"\r\n}\r\ndef test_1118(url,data):\r\n    r= requests.post(url=url,data=json.dumps(data),headers=header)\r\n    print(r.json())\r\n\r\ntest_1118(url,data)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/python接口测试/demo.py b/python接口测试/demo.py
--- a/python接口测试/demo.py	(revision c5e2c600923ede185edc2c07df7654e1bd59b90c)
+++ b/python接口测试/demo.py	(date 1610085373447)
@@ -8,6 +8,7 @@
 
 import requests
 import json
+import data
 # get请求
 
 # url = 'http://www.baidu.com'
@@ -15,27 +16,16 @@
 # print(r.status_code)
 
 # post 请求
-base_url = ' http://loan-api-link.asset.jc4.jieyue.com'
-api = '/loan-api-link/api/appbiz/LoanEasyRest/1118/v1'
-url = base_url + api
-header = {'Content-Type': 'application/json;charset=UTF-8',
-          'User-Agent': 'Apache-HttpClient/4.5.5 (Java/1.8.0_121)',
-          }
-data = {
-    "sysSource": "4",
-    "frontTransNo": "20210107221401599",
-    "frontTransTime": "2019-07-18 15:15:20",
-    "interfaceNo": "1118",
-    "busiCode": "CSB18",
-    "telephone": "13916263326",
-    "appAmount": "30000",
-    "appPeriod": "24",
-    "custmerManger": "11037385",
-    "position": "301000817",
-    "telemarketing": "0"
-}
-def test_1118(url,data):
+
+
+def test_1118(url,data,header):
+    r= requests.post(url=url,data=json.dumps(data),headers=header)
+    print(r.json())
+
+test_1118(data.url1118,data.data1118,data.header)
+
+def test_1037(url,data,header):
     r= requests.post(url=url,data=json.dumps(data),headers=header)
     print(r.json())
 
-test_1118(url,data)
\ No newline at end of file
+test_1037(data.url1037,data.data1037,data.header)
\ No newline at end of file
Index: HTMLTestRunner.py
===================================================================
diff --git a/HTMLTestRunner.py b/HTMLTestRunner.py
deleted file mode 100644
--- a/HTMLTestRunner.py	(revision c5e2c600923ede185edc2c07df7654e1bd59b90c)
+++ /dev/null	(revision c5e2c600923ede185edc2c07df7654e1bd59b90c)
@@ -1,906 +0,0 @@
-# -*- coding: utf-8 -*-
-"""
-A TestRunner for use with the Python unit testing framework. It
-generates a HTML report to show the result at a glance.
-
-The simplest way to use this is to invoke its main method. E.g.
-
-    import unittest
-    import HTMLTestRunner
-
-    ... define your tests ...
-
-    if __name__ == '__main__':
-        HTMLTestRunner.main()
-
-
-For more customization options, instantiates a HTMLTestRunner object.
-HTMLTestRunner is a counterpart to unittest's TextTestRunner. E.g.
-
-    # output to a file
-    fp = file('my_report.html', 'wb')
-    runner = HTMLTestRunner.HTMLTestRunner(
-                stream=fp,
-                title='My unit test',
-                description='This demonstrates the report output by HTMLTestRunner.'
-                )
-
-    # Use an external stylesheet.
-    # See the Template_mixin class for more customizable options
-    runner.STYLESHEET_TMPL = '<link rel="stylesheet" href="my_stylesheet.css" type="text/css">'
-
-    # run the test
-    runner.run(my_test_suite)
-
-
-------------------------------------------------------------------------
-Copyright (c) 2004-2007, Wai Yip Tung
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are
-met:
-
-* Redistributions of source code must retain the above copyright notice,
-  this list of conditions and the following disclaimer.
-* Redistributions in binary form must reproduce the above copyright
-  notice, this list of conditions and the following disclaimer in the
-  documentation and/or other materials provided with the distribution.
-* Neither the name Wai Yip Tung nor the names of its contributors may be
-  used to endorse or promote products derived from this software without
-  specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
-IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
-TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
-PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
-OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
-EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
-PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
-PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
-LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-"""
-
-# URL: http://tungwaiyip.info/software/HTMLTestRunner.html
-
-__author__ = "Wai Yip Tung"
-__version__ = "0.9.1"
-
-"""
-Change History
-Version 0.9.1
-* 用Echarts添加执行情况统计图 (灰蓝)
-
-Version 0.9.0
-* 改成Python 3.x (灰蓝)
-
-Version 0.8.3
-* 使用 Bootstrap稍加美化 (灰蓝)
-* 改为中文 (灰蓝)
-
-Version 0.8.2
-* Show output inline instead of popup window (Viorel Lupu).
-
-Version in 0.8.1
-* Validated XHTML (Wolfgang Borgert).
-* Added description of test classes and test cases.
-
-Version in 0.8.0
-* Define Template_mixin class for customization.
-* Workaround a IE 6 bug that it does not treat <script> block as CDATA.
-
-Version in 0.7.1
-* Back port to Python 2.3 (Frank Horowitz).
-* Fix missing scroll bars in detail log (Podi).
-"""
-
-# TODO: color stderr
-# TODO: simplify javascript using ,ore than 1 class in the class attribute?
-
-import datetime
-import sys
-import io
-import time
-import unittest
-from xml.sax import saxutils
-
-
-# ------------------------------------------------------------------------
-# The redirectors below are used to capture output during testing. Output
-# sent to sys.stdout and sys.stderr are automatically captured. However
-# in some cases sys.stdout is already cached before HTMLTestRunner is
-# invoked (e.g. calling logging.basicConfig). In order to capture those
-# output, use the redirectors for the cached stream.
-#
-# e.g.
-#   >>> logging.basicConfig(stream=HTMLTestRunner.stdout_redirector)
-#   >>>
-
-class OutputRedirector(object):
-    """ Wrapper to redirect stdout or stderr """
-    def __init__(self, fp):
-        self.fp = fp
-
-    def write(self, s):
-        self.fp.write(s)
-
-    def writelines(self, lines):
-        self.fp.writelines(lines)
-
-    def flush(self):
-        self.fp.flush()
-
-stdout_redirector = OutputRedirector(sys.stdout)
-stderr_redirector = OutputRedirector(sys.stderr)
-
-
-# ----------------------------------------------------------------------
-# Template
-
-
-class Template_mixin(object):
-    """
-    Define a HTML template for report customerization and generation.
-
-    Overall structure of an HTML report
-
-    HTML
-    +------------------------+
-    |<html>                  |
-    |  <head>                |
-    |                        |
-    |   STYLESHEET           |
-    |   +----------------+   |
-    |   |                |   |
-    |   +----------------+   |
-    |                        |
-    |  </head>               |
-    |                        |
-    |  <body>                |
-    |                        |
-    |   HEADING              |
-    |   +----------------+   |
-    |   |                |   |
-    |   +----------------+   |
-    |                        |
-    |   REPORT               |
-    |   +----------------+   |
-    |   |                |   |
-    |   +----------------+   |
-    |                        |
-    |   ENDING               |
-    |   +----------------+   |
-    |   |                |   |
-    |   +----------------+   |
-    |                        |
-    |  </body>               |
-    |</html>                 |
-    +------------------------+
-    """
-
-    STATUS = {
-        0: u'通过',
-        1: u'失败',
-        2: u'错误',
-    }
-
-    DEFAULT_TITLE = 'Unit Test Report'
-    DEFAULT_DESCRIPTION = ''
-
-    # ------------------------------------------------------------------------
-    # HTML Template
-
-    HTML_TMPL = r"""<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html xmlns="http://www.w3.org/1999/xhtml">
-<head>
-    <title>%(title)s</title>
-    <meta name="generator" content="%(generator)s"/>
-    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
-    
-    <link href="http://cdn.bootcss.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet">
-    <script src="https://cdn.bootcss.com/echarts/3.8.5/echarts.common.min.js"></script>
-    <!-- <script type="text/javascript" src="js/echarts.common.min.js"></script> -->
-    
-    %(stylesheet)s
-    
-</head>
-<body>
-    <script language="javascript" type="text/javascript"><!--
-    output_list = Array();
-
-    /* level - 0:Summary; 1:Failed; 2:All */
-    function showCase(level) {
-        trs = document.getElementsByTagName("tr");
-        for (var i = 0; i < trs.length; i++) {
-            tr = trs[i];
-            id = tr.id;
-            if (id.substr(0,2) == 'ft') {
-                if (level < 1) {
-                    tr.className = 'hiddenRow';
-                }
-                else {
-                    tr.className = '';
-                }
-            }
-            if (id.substr(0,2) == 'pt') {
-                if (level > 1) {
-                    tr.className = '';
-                }
-                else {
-                    tr.className = 'hiddenRow';
-                }
-            }
-        }
-    }
-
-
-    function showClassDetail(cid, count) {
-        var id_list = Array(count);
-        var toHide = 1;
-        for (var i = 0; i < count; i++) {
-            tid0 = 't' + cid.substr(1) + '.' + (i+1);
-            tid = 'f' + tid0;
-            tr = document.getElementById(tid);
-            if (!tr) {
-                tid = 'p' + tid0;
-                tr = document.getElementById(tid);
-            }
-            id_list[i] = tid;
-            if (tr.className) {
-                toHide = 0;
-            }
-        }
-        for (var i = 0; i < count; i++) {
-            tid = id_list[i];
-            if (toHide) {
-                document.getElementById('div_'+tid).style.display = 'none'
-                document.getElementById(tid).className = 'hiddenRow';
-            }
-            else {
-                document.getElementById(tid).className = '';
-            }
-        }
-    }
-
-
-    function showTestDetail(div_id){
-        var details_div = document.getElementById(div_id)
-        var displayState = details_div.style.display
-        // alert(displayState)
-        if (displayState != 'block' ) {
-            displayState = 'block'
-            details_div.style.display = 'block'
-        }
-        else {
-            details_div.style.display = 'none'
-        }
-    }
-
-
-    function html_escape(s) {
-        s = s.replace(/&/g,'&');
-        s = s.replace(/</g,'<');
-        s = s.replace(/>/g,'>');
-        return s;
-    }
-
-    /* obsoleted by detail in <div>
-    function showOutput(id, name) {
-        var w = window.open("", //url
-                        name,
-                        "resizable,scrollbars,status,width=800,height=450");
-        d = w.document;
-        d.write("<pre>");
-        d.write(html_escape(output_list[id]));
-        d.write("\n");
-        d.write("<a href='javascript:window.close()'>close</a>\n");
-        d.write("</pre>\n");
-        d.close();
-    }
-    */
-    --></script>
-
-    <div id="div_base">
-        %(heading)s
-        %(report)s
-        %(ending)s
-        %(chart_script)s
-    </div>
-</body>
-</html>
-"""  # variables: (title, generator, stylesheet, heading, report, ending, chart_script)
-
-    ECHARTS_SCRIPT = """
-    <script type="text/javascript">
-        // 基于准备好的dom，初始化echarts实例
-        var myChart = echarts.init(document.getElementById('chart'));
-
-        // 指定图表的配置项和数据
-        var option = {
-            title : {
-                text: '测试执行情况',
-                x:'center'
-            },
-            tooltip : {
-                trigger: 'item',
-                formatter: "{a} <br/>{b} : {c} ({d}%%)"
-            },
-            color: ['#95b75d', 'grey', '#b64645'],
-            legend: {
-                orient: 'vertical',
-                left: 'left',
-                data: ['通过','失败','错误']
-            },
-            series : [
-                {
-                    name: '测试执行情况',
-                    type: 'pie',
-                    radius : '60%%',
-                    center: ['50%%', '60%%'],
-                    data:[
-                        {value:%(Pass)s, name:'通过'},
-                        {value:%(fail)s, name:'失败'},
-                        {value:%(error)s, name:'错误'}
-                    ],
-                    itemStyle: {
-                        emphasis: {
-                            shadowBlur: 10,
-                            shadowOffsetX: 0,
-                            shadowColor: 'rgba(0, 0, 0, 0.5)'
-                        }
-                    }
-                }
-            ]
-        };
-
-        // 使用刚指定的配置项和数据显示图表。
-        myChart.setOption(option);
-    </script>
-    """  # variables: (Pass, fail, error)
-
-    # ------------------------------------------------------------------------
-    # Stylesheet
-    #
-    # alternatively use a <link> for external style sheet, e.g.
-    #   <link rel="stylesheet" href="$url" type="text/css">
-
-    STYLESHEET_TMPL = """
-<style type="text/css" media="screen">
-    body        { font-family: Microsoft YaHei,Consolas,arial,sans-serif; font-size: 80%; }
-    table       { font-size: 100%; }
-    pre         { white-space: pre-wrap;word-wrap: break-word; }
-
-    /* -- heading ---------------------------------------------------------------------- */
-    h1 {
-        font-size: 16pt;
-        color: gray;
-    }
-    .heading {
-        margin-top: 0ex;
-        margin-bottom: 1ex;
-    }
-
-    .heading .attribute {
-        margin-top: 1ex;
-        margin-bottom: 0;
-    }
-
-    .heading .description {
-        margin-top: 2ex;
-        margin-bottom: 3ex;
-    }
-
-    /* -- css div popup ------------------------------------------------------------------------ */
-    a.popup_link {
-    }
-
-    a.popup_link:hover {
-        color: red;
-    }
-
-    .popup_window {
-        display: none;
-        position: relative;
-        left: 0px;
-        top: 0px;
-        /*border: solid #627173 1px; */
-        padding: 10px;
-        /*background-color: #E6E6D6; */
-        font-family: "Lucida Console", "Courier New", Courier, monospace;
-        text-align: left;
-        font-size: 8pt;
-        /* width: 500px;*/
-    }
-
-    }
-    /* -- report ------------------------------------------------------------------------ */
-    #show_detail_line {
-        margin-top: 3ex;
-        margin-bottom: 1ex;
-    }
-    #result_table {
-        width: 99%;
-    }
-    #header_row {
-        font-weight: bold;
-        color: #303641;
-        background-color: #ebebeb;
-    }
-    #total_row  { font-weight: bold; }
-    .passClass  { background-color: #bdedbc; }
-    .failClass  { background-color: #ffefa4; }
-    .errorClass { background-color: #ffc9c9; }
-    .passCase   { color: #6c6; }
-    .failCase   { color: #FF6600; font-weight: bold; }
-    .errorCase  { color: #c00; font-weight: bold; }
-    .hiddenRow  { display: none; }
-    .testcase   { margin-left: 2em; }
-
-
-    /* -- ending ---------------------------------------------------------------------- */
-    #ending {
-    }
-
-    #div_base {
-                position:absolute;
-                top:0%;
-                left:5%;
-                right:5%;
-                width: auto;
-                height: auto;
-                margin: -15px 0 0 0;
-    }
-</style>
-"""
-
-    # ------------------------------------------------------------------------
-    # Heading
-    #
-
-    HEADING_TMPL = """
-    <div class='page-header'>
-        <h1>%(title)s</h1>
-    %(parameters)s
-    </div>
-    <div style="float: left;width:50%%;"><p class='description'>%(description)s</p></div>
-    <div id="chart" style="width:50%%;height:400px;float:left;"></div>
-"""  # variables: (title, parameters, description)
-
-    HEADING_ATTRIBUTE_TMPL = """<p class='attribute'><strong>%(name)s:</strong> %(value)s</p>
-"""  # variables: (name, value)
-
-    # ------------------------------------------------------------------------
-    # Report
-    #
-
-    REPORT_TMPL = u"""
-    <div class="btn-group btn-group-sm">
-        <button class="btn btn-default" onclick='javascript:showCase(0)'>总结</button>
-        <button class="btn btn-default" onclick='javascript:showCase(1)'>失败</button>
-        <button class="btn btn-default" onclick='javascript:showCase(2)'>全部</button>
-    </div>
-    <p></p>
-    <table id='result_table' class="table table-bordered">
-        <colgroup>
-            <col align='left' />
-            <col align='right' />
-            <col align='right' />
-            <col align='right' />
-            <col align='right' />
-            <col align='right' />
-        </colgroup>
-        <tr id='header_row'>
-            <td>测试套件/测试用例</td>
-            <td>总数</td>
-            <td>通过</td>
-            <td>失败</td>
-            <td>错误</td>
-            <td>查看</td>
-        </tr>
-        %(test_list)s
-        <tr id='total_row'>
-            <td>总计</td>
-            <td>%(count)s</td>
-            <td>%(Pass)s</td>
-            <td>%(fail)s</td>
-            <td>%(error)s</td>
-            <td> </td>
-        </tr>
-    </table>
-"""  # variables: (test_list, count, Pass, fail, error)
-
-    REPORT_CLASS_TMPL = u"""
-    <tr class='%(style)s'>
-        <td>%(desc)s</td>
-        <td>%(count)s</td>
-        <td>%(Pass)s</td>
-        <td>%(fail)s</td>
-        <td>%(error)s</td>
-        <td><a href="javascript:showClassDetail('%(cid)s',%(count)s)">详情</a></td>
-    </tr>
-"""  # variables: (style, desc, count, Pass, fail, error, cid)
-
-    REPORT_TEST_WITH_OUTPUT_TMPL = r"""
-<tr id='%(tid)s' class='%(Class)s'>
-    <td class='%(style)s'><div class='testcase'>%(desc)s</div></td>
-    <td colspan='5' align='center'>
-
-    <!--css div popup start-->
-    <a class="popup_link" onfocus='this.blur();' href="javascript:showTestDetail('div_%(tid)s')" >
-        %(status)s</a>
-
-    <div id='div_%(tid)s' class="popup_window">
-        <pre>%(script)s</pre>
-    </div>
-    <!--css div popup end-->
-
-    </td>
-</tr>
-"""  # variables: (tid, Class, style, desc, status)
-
-    REPORT_TEST_NO_OUTPUT_TMPL = r"""
-<tr id='%(tid)s' class='%(Class)s'>
-    <td class='%(style)s'><div class='testcase'>%(desc)s</div></td>
-    <td colspan='5' align='center'>%(status)s</td>
-</tr>
-"""  # variables: (tid, Class, style, desc, status)
-
-    REPORT_TEST_OUTPUT_TMPL = r"""%(id)s: %(output)s"""  # variables: (id, output)
-
-    # ------------------------------------------------------------------------
-    # ENDING
-    #
-
-    ENDING_TMPL = """<div id='ending'> </div>"""
-
-# -------------------- The end of the Template class -------------------
-
-
-TestResult = unittest.TestResult
-
-
-class _TestResult(TestResult):
-    # note: _TestResult is a pure representation of results.
-    # It lacks the output and reporting ability compares to unittest._TextTestResult.
-
-    def __init__(self, verbosity=1):
-        TestResult.__init__(self)
-        self.stdout0 = None
-        self.stderr0 = None
-        self.success_count = 0
-        self.failure_count = 0
-        self.error_count = 0
-        self.verbosity = verbosity
-
-        # result is a list of result in 4 tuple
-        # (
-        #   result code (0: success; 1: fail; 2: error),
-        #   TestCase object,
-        #   Test output (byte string),
-        #   stack trace,
-        # )
-        self.result = []
-        self.subtestlist = []
-
-    def startTest(self, test):
-        TestResult.startTest(self, test)
-        # just one buffer for both stdout and stderr
-        self.outputBuffer = io.StringIO()
-        stdout_redirector.fp = self.outputBuffer
-        stderr_redirector.fp = self.outputBuffer
-        self.stdout0 = sys.stdout
-        self.stderr0 = sys.stderr
-        sys.stdout = stdout_redirector
-        sys.stderr = stderr_redirector
-
-    def complete_output(self):
-        """
-        Disconnect output redirection and return buffer.
-        Safe to call multiple times.
-        """
-        if self.stdout0:
-            sys.stdout = self.stdout0
-            sys.stderr = self.stderr0
-            self.stdout0 = None
-            self.stderr0 = None
-        return self.outputBuffer.getvalue()
-
-    def stopTest(self, test):
-        # Usually one of addSuccess, addError or addFailure would have been called.
-        # But there are some path in unittest that would bypass this.
-        # We must disconnect stdout in stopTest(), which is guaranteed to be called.
-        self.complete_output()
-
-    def addSuccess(self, test):
-        if test not in self.subtestlist:
-            self.success_count += 1
-            TestResult.addSuccess(self, test)
-            output = self.complete_output()
-            self.result.append((0, test, output, ''))
-            if self.verbosity > 1:
-                sys.stderr.write('ok ')
-                sys.stderr.write(str(test))
-                sys.stderr.write('\n')
-            else:
-                sys.stderr.write('.')
-
-    def addError(self, test, err):
-        self.error_count += 1
-        TestResult.addError(self, test, err)
-        _, _exc_str = self.errors[-1]
-        output = self.complete_output()
-        self.result.append((2, test, output, _exc_str))
-        if self.verbosity > 1:
-            sys.stderr.write('E  ')
-            sys.stderr.write(str(test))
-            sys.stderr.write('\n')
-        else:
-            sys.stderr.write('E')
-
-    def addFailure(self, test, err):
-        self.failure_count += 1
-        TestResult.addFailure(self, test, err)
-        _, _exc_str = self.failures[-1]
-        output = self.complete_output()
-        self.result.append((1, test, output, _exc_str))
-        if self.verbosity > 1:
-            sys.stderr.write('F  ')
-            sys.stderr.write(str(test))
-            sys.stderr.write('\n')
-        else:
-            sys.stderr.write('F')
-
-    def addSubTest(self, test, subtest, err):
-        if err is not None:
-            if getattr(self, 'failfast', False):
-                self.stop()
-            if issubclass(err[0], test.failureException):
-                self.failure_count += 1
-                errors = self.failures
-                errors.append((subtest, self._exc_info_to_string(err, subtest)))
-                output = self.complete_output()
-                self.result.append((1, test, output + '\nSubTestCase Failed:\n' + str(subtest),
-                                    self._exc_info_to_string(err, subtest)))
-                if self.verbosity > 1:
-                    sys.stderr.write('F  ')
-                    sys.stderr.write(str(subtest))
-                    sys.stderr.write('\n')
-                else:
-                    sys.stderr.write('F')
-            else:
-                self.error_count += 1
-                errors = self.errors
-                errors.append((subtest, self._exc_info_to_string(err, subtest)))
-                output = self.complete_output()
-                self.result.append(
-                    (2, test, output + '\nSubTestCase Error:\n' + str(subtest), self._exc_info_to_string(err, subtest)))
-                if self.verbosity > 1:
-                    sys.stderr.write('E  ')
-                    sys.stderr.write(str(subtest))
-                    sys.stderr.write('\n')
-                else:
-                    sys.stderr.write('E')
-            self._mirrorOutput = True
-        else:
-            self.subtestlist.append(subtest)
-            self.subtestlist.append(test)
-            self.success_count += 1
-            output = self.complete_output()
-            self.result.append((0, test, output + '\nSubTestCase Pass:\n' + str(subtest), ''))
-            if self.verbosity > 1:
-                sys.stderr.write('ok ')
-                sys.stderr.write(str(subtest))
-                sys.stderr.write('\n')
-            else:
-                sys.stderr.write('.')
-
-
-class HTMLTestRunner(Template_mixin):
-
-    def __init__(self, stream=sys.stdout, verbosity=1, title=None, description=None):
-        self.stream = stream
-        self.verbosity = verbosity
-        if title is None:
-            self.title = self.DEFAULT_TITLE
-        else:
-            self.title = title
-        if description is None:
-            self.description = self.DEFAULT_DESCRIPTION
-        else:
-            self.description = description
-
-        self.startTime = datetime.datetime.now()
-
-    def run(self, test):
-        "Run the given test case or test suite."
-        result = _TestResult(self.verbosity)
-        test(result)
-        self.stopTime = datetime.datetime.now()
-        self.generateReport(test, result)
-        print('\nTime Elapsed: %s' % (self.stopTime-self.startTime), file=sys.stderr)
-        return result
-
-    def sortResult(self, result_list):
-        # unittest does not seems to run in any particular order.
-        # Here at least we want to group them together by class.
-        rmap = {}
-        classes = []
-        for n,t,o,e in result_list:
-            cls = t.__class__
-            if cls not in rmap:
-                rmap[cls] = []
-                classes.append(cls)
-            rmap[cls].append((n,t,o,e))
-        r = [(cls, rmap[cls]) for cls in classes]
-        return r
-
-    def getReportAttributes(self, result):
-        """
-        Return report attributes as a list of (name, value).
-        Override this to add custom attributes.
-        """
-        startTime = str(self.startTime)[:19]
-        duration = str(self.stopTime - self.startTime)
-        status = []
-        if result.success_count: status.append(u'通过 %s' % result.success_count)
-        if result.failure_count: status.append(u'失败 %s' % result.failure_count)
-        if result.error_count:   status.append(u'错误 %s' % result.error_count  )
-        if status:
-            status = ' '.join(status)
-        else:
-            status = 'none'
-        return [
-            (u'开始时间', startTime),
-            (u'运行时长', duration),
-            (u'状态', status),
-        ]
-
-    def generateReport(self, test, result):
-        report_attrs = self.getReportAttributes(result)
-        generator = 'HTMLTestRunner %s' % __version__
-        stylesheet = self._generate_stylesheet()
-        heading = self._generate_heading(report_attrs)
-        report = self._generate_report(result)
-        ending = self._generate_ending()
-        chart = self._generate_chart(result)
-        output = self.HTML_TMPL % dict(
-            title = saxutils.escape(self.title),
-            generator = generator,
-            stylesheet = stylesheet,
-            heading = heading,
-            report = report,
-            ending = ending,
-            chart_script = chart
-        )
-        self.stream.write(output.encode('utf8'))
-        self.stream.write("gg".encode('utf8'))
-
-    def _generate_stylesheet(self):
-        return self.STYLESHEET_TMPL
-
-    def _generate_heading(self, report_attrs):
-        a_lines = []
-        for name, value in report_attrs:
-            line = self.HEADING_ATTRIBUTE_TMPL % dict(
-                name = saxutils.escape(name),
-                value = saxutils.escape(value),
-            )
-            a_lines.append(line)
-        heading = self.HEADING_TMPL % dict(
-            title = saxutils.escape(self.title),
-            parameters = ''.join(a_lines),
-            description = saxutils.escape(self.description),
-        )
-        return heading
-
-    def _generate_report(self, result):
-        rows = []
-        sortedResult = self.sortResult(result.result)
-        for cid, (cls, cls_results) in enumerate(sortedResult):
-            # subtotal for a class
-            np = nf = ne = 0
-            for n,t,o,e in cls_results:
-                if n == 0: np += 1
-                elif n == 1: nf += 1
-                else: ne += 1
-
-            # format class description
-            if cls.__module__ == "__main__":
-                name = cls.__name__
-            else:
-                name = "%s.%s" % (cls.__module__, cls.__name__)
-            doc = cls.__doc__ and cls.__doc__.split("\n")[0] or ""
-            desc = doc and '%s: %s' % (name, doc) or name
-
-            row = self.REPORT_CLASS_TMPL % dict(
-                style = ne > 0 and 'errorClass' or nf > 0 and 'failClass' or 'passClass',
-                desc = desc,
-                count = np+nf+ne,
-                Pass = np,
-                fail = nf,
-                error = ne,
-                cid = 'c%s' % (cid+1),
-            )
-            rows.append(row)
-
-            for tid, (n,t,o,e) in enumerate(cls_results):
-                self._generate_report_test(rows, cid, tid, n, t, o, e)
-
-        report = self.REPORT_TMPL % dict(
-            test_list = ''.join(rows),
-            count = str(result.success_count+result.failure_count+result.error_count),
-            Pass = str(result.success_count),
-            fail = str(result.failure_count),
-            error = str(result.error_count),
-        )
-        return report
-
-    def _generate_chart(self, result):
-        chart = self.ECHARTS_SCRIPT % dict(
-            Pass=str(result.success_count),
-            fail=str(result.failure_count),
-            error=str(result.error_count),
-        )
-        return chart
-
-    def _generate_report_test(self, rows, cid, tid, n, t, o, e):
-        # e.g. 'pt1.1', 'ft1.1', etc
-        has_output = bool(o or e)
-        tid = (n == 0 and 'p' or 'f') + 't%s.%s' % (cid+1,tid+1)
-        name = t.id().split('.')[-1]
-        doc = t.shortDescription() or ""
-        desc = doc and ('%s: %s' % (name, doc)) or name
-        tmpl = has_output and self.REPORT_TEST_WITH_OUTPUT_TMPL or self.REPORT_TEST_NO_OUTPUT_TMPL
-
-        script = self.REPORT_TEST_OUTPUT_TMPL % dict(
-            id=tid,
-            output=saxutils.escape(o+e),
-        )
-
-        row = tmpl % dict(
-            tid=tid,
-            Class=(n == 0 and 'hiddenRow' or 'none'),
-            style=(n == 2 and 'errorCase' or (n == 1 and 'failCase' or 'none')),
-            desc=desc,
-            script=script,
-            status=self.STATUS[n],
-        )
-        rows.append(row)
-        if not has_output:
-            return
-
-    def _generate_ending(self):
-        return self.ENDING_TMPL
-
-
-##############################################################################
-# Facilities for running tests from the command line
-##############################################################################
-
-# Note: Reuse unittest.TestProgram to launch test. In the future we may
-# build our own launcher to support more specific command line
-# parameters like test title, CSS, etc.
-class TestProgram(unittest.TestProgram):
-    """
-    A variation of the unittest.TestProgram. Please refer to the base
-    class for command line parameters.
-    """
-    def runTests(self):
-        # Pick HTMLTestRunner as the default test runner.
-        # base class's testRunner parameter is not useful because it means
-        # we have to instantiate HTMLTestRunner before we know self.verbosity.
-        if self.testRunner is None:
-            self.testRunner = HTMLTestRunner(verbosity=self.verbosity)
-        unittest.TestProgram.runTests(self)
-
-main = TestProgram
-
-##############################################################################
-# Executing this module from the command line
-##############################################################################
-
-if __name__ == "__main__":
-    main(module=None)
\ No newline at end of file
Index: HTMLTestRunnerCN.py
===================================================================
diff --git a/HTMLTestRunnerCN.py b/HTMLTestRunnerCN.py
deleted file mode 100644
--- a/HTMLTestRunnerCN.py	(revision c5e2c600923ede185edc2c07df7654e1bd59b90c)
+++ /dev/null	(revision c5e2c600923ede185edc2c07df7654e1bd59b90c)
@@ -1,825 +0,0 @@
-#coding=utf-8
-"""
-A TestRunner for use with the Python unit testing framework. It
-generates a HTML report to show the result at a glance.
-
-The simplest way to use this is to invoke its main method. E.g.
-
-    import unittest
-    import HTMLTestReportCN
-
-    ... define your tests ...
-
-    if __name__ == '__main__':
-        HTMLTestReportCN.main()
-
-
-For more customization options, instantiates a HTMLTestReportCN object.
-HTMLTestReportCN is a counterpart to unittest's TextTestRunner. E.g.
-
-    # output to a file
-    fp = file('my_report.html', 'wb')
-    runner = HTMLTestReportCN.HTMLTestReportCN(
-                stream=fp,
-                title='My unit test',
-                description='This demonstrates the report output by HTMLTestReportCN.'
-                )
-
-    # Use an external stylesheet.
-    # See the Template_mixin class for more customizable options
-    runner.STYLESHEET_TMPL = '<link rel="stylesheet" href="my_stylesheet.css" type="text/css">'
-
-    # run the test
-    runner.run(my_test_suite)
-
-
-------------------------------------------------------------------------
-Copyright (c) 2004-2007, Wai Yip Tung
-Copyright (c) 2017, Findyou
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are
-met:
-
-* Redistributions of source code must retain the above copyright notice,
-  this list of conditions and the following disclaimer.
-* Redistributions in binary form must reproduce the above copyright
-  notice, this list of conditions and the following disclaimer in the
-  documentation and/or other materials provided with the distribution.
-* Neither the name Wai Yip Tung nor the names of its contributors may be
-  used to endorse or promote products derived from this software without
-  specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
-IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
-TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
-PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
-OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
-EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
-PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
-PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
-LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-"""
-
-# URL: http://tungwaiyip.info/software/HTMLTestRunner.html
-
-__author__ = "Wai Yip Tung,  Findyou"
-__version__ = "0.8.3"
-
-
-"""
-Change History
-Version 0.8.3 -Findyou 20171206
-* BUG fixed :错误的测试用例没有统计与显示
-* BUG fixed :当PASS的测试用例有print内容时，通过按钮显示为红色
-* 表格背景颜色根据用例结果显示颜色，优先级： 错误(黄色)>失败(红色)>通过(绿色)
-* 合并文为HTMLTestRunner*N.py 同时支持python2,python3
-
-Version 0.8.2.2 -Findyou
-* HTMLTestRunnerEN.py 支持 python3.x
-* HTMLTestRunnerEN.py 支持 python2.x
-
-Version 0.8.2.1 -Findyou
-* 支持中文，汉化
-* 调整样式，美化（需要连入网络，使用的百度的Bootstrap.js）
-* 增加 通过分类显示、测试人员、通过率的展示
-* 优化“详细”与“收起”状态的变换
-* 增加返回顶部的锚点
-
-Version 0.8.2
-* Show output inline instead of popup window (Viorel Lupu).
-
-Version in 0.8.1
-* Validated XHTML (Wolfgang Borgert).
-* Added description of test classes and test cases.
-
-Version in 0.8.0
-* Define Template_mixin class for customization.
-* Workaround a IE 6 bug that it does not treat <script> block as CDATA.
-
-Version in 0.7.1
-* Back port to Python 2.3 (Frank Horowitz).
-* Fix missing scroll bars in detail log (Podi).
-"""
-
-# TODO: color stderr
-# TODO: simplify javascript using ,ore than 1 class in the class attribute?
-
-import datetime
-try:
-    from StringIO import StringIO
-except ImportError:
-    from io import StringIO
-import sys
-import time
-import unittest
-from xml.sax import saxutils
-
-try:
-    reload(sys)
-    sys.setdefaultencoding('utf-8')
-except NameError:
-    pass
-
-# ------------------------------------------------------------------------
-# The redirectors below are used to capture output during testing. Output
-# sent to sys.stdout and sys.stderr are automatically captured. However
-# in some cases sys.stdout is already cached before HTMLTestRunner is
-# invoked (e.g. calling logging.basicConfig). In order to capture those
-# output, use the redirectors for the cached stream.
-#
-# e.g.
-#   >>> logging.basicConfig(stream=HTMLTestRunner.stdout_redirector)
-#   >>>
-
-class OutputRedirector(object):
-    """ Wrapper to redirect stdout or stderr """
-    def __init__(self, fp):
-        self.fp = fp
-
-    def write(self, s):
-        self.fp.write(s)
-
-    def writelines(self, lines):
-        self.fp.writelines(lines)
-
-    def flush(self):
-        self.fp.flush()
-
-stdout_redirector = OutputRedirector(sys.stdout)
-stderr_redirector = OutputRedirector(sys.stderr)
-
-# ----------------------------------------------------------------------
-# Template
-
-class Template_mixin(object):
-    """
-    Define a HTML template for report customerization and generation.
-
-    Overall structure of an HTML report
-
-    HTML
-    +------------------------+
-    |<html>                  |
-    |  <head>                |
-    |                        |
-    |   STYLESHEET           |
-    |   +----------------+   |
-    |   |                |   |
-    |   +----------------+   |
-    |                        |
-    |  </head>               |
-    |                        |
-    |  <body>                |
-    |                        |
-    |   HEADING              |
-    |   +----------------+   |
-    |   |                |   |
-    |   +----------------+   |
-    |                        |
-    |   REPORT               |
-    |   +----------------+   |
-    |   |                |   |
-    |   +----------------+   |
-    |                        |
-    |   ENDING               |
-    |   +----------------+   |
-    |   |                |   |
-    |   +----------------+   |
-    |                        |
-    |  </body>               |
-    |</html>                 |
-    +------------------------+
-    """
-
-    STATUS = {
-    0: '通过',
-    1: '失败',
-    2: '错误',
-    }
-
-    DEFAULT_TITLE = '测试报告'
-    DEFAULT_DESCRIPTION = ''
-    DEFAULT_TESTER='QA'
-
-    # ------------------------------------------------------------------------
-    # HTML Template
-
-    HTML_TMPL = r"""<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html xmlns="http://www.w3.org/1999/xhtml">
-<head>
-    <title>%(title)s</title>
-    <meta name="generator" content="%(generator)s"/>
-    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
-    <link href="http://libs.baidu.com/bootstrap/3.0.3/css/bootstrap.min.css" rel="stylesheet">
-    <script src="http://libs.baidu.com/jquery/2.0.0/jquery.min.js"></script>
-    <script src="http://libs.baidu.com/bootstrap/3.0.3/js/bootstrap.min.js"></script>
-    %(stylesheet)s
-</head>
-<body >
-%(heading)s
-%(report)s
-%(ending)s
-<script language="javascript" type="text/javascript">
-output_list = Array();
-// 修改按钮颜色显示错误问题 --Findyou v0.8.2.3
-
-$("button[id^='btn_pt']").addClass("btn btn-success");
-$("button[id^='btn_ft']").addClass("btn btn-danger");
-$("button[id^='btn_et']").addClass("btn btn-warning");
-
-/*level
-增加分类并调整，增加error按钮事件 --Findyou v0.8.2.3
-0:Pass    //pt none, ft hiddenRow, et hiddenRow
-1:Failed  //pt hiddenRow, ft none, et hiddenRow
-2:Error    //pt hiddenRow, ft hiddenRow, et none
-3:All     //pt none, ft none, et none
-4:Summary //all hiddenRow
-*/
-
-//add Error button event --Findyou v0.8.2.3
-function showCase(level) {
-    trs = document.getElementsByTagName("tr");
-    for (var i = 0; i < trs.length; i++) {
-        tr = trs[i];
-        id = tr.id;
-        if (id.substr(0,2) == 'ft') {
-            if (level == 0 || level == 2 || level == 4 ) {
-                tr.className = 'hiddenRow';
-            }
-            else {
-                tr.className = '';
-            }
-        }
-        if (id.substr(0,2) == 'pt') {
-            if (level == 1 || level == 2 || level == 4) {
-                tr.className = 'hiddenRow';
-            }
-            else {
-                tr.className = '';
-            }
-        }
-        if (id.substr(0,2) == 'et') {
-            if (level == 0 || level == 1 || level == 4) {
-                tr.className = 'hiddenRow';
-            }
-            else {
-                tr.className = '';
-            }
-        }
-    }
-
-    //加入【详细】切换文字变化 --Findyou
-    detail_class=document.getElementsByClassName('detail');
-	//console.log(detail_class.length)
-	if (level == 3) {
-		for (var i = 0; i < detail_class.length; i++){
-			detail_class[i].innerHTML="收起"
-		}
-	}
-	else{
-			for (var i = 0; i < detail_class.length; i++){
-			detail_class[i].innerHTML="详细"
-		}
-	}
-}
-
-//add Error button event --Findyou v0.8.2.3
-function showClassDetail(cid, count) {
-    var id_list = Array(count);
-    var toHide = 1;
-    for (var i = 0; i < count; i++) {
-        tid0 = 't' + cid.substr(1) + '_' + (i+1);
-        tid = 'f' + tid0;
-        tr = document.getElementById(tid);
-        if (!tr) {
-            tid = 'p' + tid0;
-            tr = document.getElementById(tid);
-        }
-        if (!tr) {
-            tid = 'e' + tid0;
-            tr = document.getElementById(tid);
-        }
-        id_list[i] = tid;
-        if (tr.className) {
-            toHide = 0;
-        }
-    }
-    for (var i = 0; i < count; i++) {
-        tid = id_list[i];
-        //修改点击无法收起的BUG，加入【详细】切换文字变化 --Findyou
-        if (toHide) {
-            document.getElementById(tid).className = 'hiddenRow';
-            document.getElementById(cid).innerText = "详细"
-        }
-        else {
-            document.getElementById(tid).className = '';
-            document.getElementById(cid).innerText = "收起"
-        }
-    }
-}
-
-function html_escape(s) {
-    s = s.replace(/&/g,'&amp;');
-    s = s.replace(/</g,'&lt;');
-    s = s.replace(/>/g,'&gt;');
-    return s;
-}
-</script>
-</body>
-</html>
-"""
-    # variables: (title, generator, stylesheet, heading, report, ending)
-
-
-    # ------------------------------------------------------------------------
-    # Stylesheet
-    #
-    # alternatively use a <link> for external style sheet, e.g.
-    #   <link rel="stylesheet" href="$url" type="text/css">
-
-    STYLESHEET_TMPL = """
-<style type="text/css" media="screen">
-body        { font-family: Microsoft YaHei,Tahoma,arial,helvetica,sans-serif;padding: 20px; font-size: 100%; }
-table       { font-size: 100%; }
-
-/* -- heading ---------------------------------------------------------------------- */
-.heading {
-    margin-top: 0ex;
-    margin-bottom: 1ex;
-}
-
-.heading .description {
-    margin-top: 4ex;
-    margin-bottom: 6ex;
-}
-
-/* -- report ------------------------------------------------------------------------ */
-#total_row  { font-weight: bold; }
-.passCase   { color: #5cb85c; }
-.failCase   { color: #d9534f; font-weight: bold; }
-.errorCase  { color: #f0ad4e; font-weight: bold; }
-.hiddenRow  { display: none; }
-.testcase   { margin-left: 2em; }
-</style>
-"""
-
-    # ------------------------------------------------------------------------
-    # Heading
-    #
-
-    HEADING_TMPL = """<div class='heading'>
-<h1 style="font-family: Microsoft YaHei">%(title)s</h1>
-%(parameters)s
-<p class='description'>%(description)s</p>
-</div>
-
-""" # variables: (title, parameters, description)
-
-    HEADING_ATTRIBUTE_TMPL = """<p class='attribute'><strong>%(name)s : </strong> %(value)s</p>
-""" # variables: (name, value)
-
-
-
-    # ------------------------------------------------------------------------
-    # Report
-    #
-    # 汉化,加美化效果 --Findyou
-    REPORT_TMPL = """
-<p id='show_detail_line'>
-<a class="btn btn-primary" href='javascript:showCase(4)'>概要【 %(passrate)s 】</a>
-<a class="btn btn-success" href='javascript:showCase(0)'>通过【 %(Pass)s 】</a>
-<a class="btn btn-danger" href='javascript:showCase(1)'>失败【 %(fail)s 】</a>
-<a class="btn btn-warning" href='javascript:showCase(2)'>错误【 %(error)s 】</a>
-<a class="btn btn-info" href='javascript:showCase(3)'>所有【 %(count)s 】</a>
-</p>
-<table id='result_table' class="table table-condensed table-bordered table-hover">
-<colgroup>
-<col align='left' />
-<col align='right' />
-<col align='right' />
-<col align='right' />
-<col align='right' />
-<col align='right' />
-</colgroup>
-<tr id='header_row' class="text-center active" style="font-weight: bold;font-size: 16px;">
-    <td>用例集/测试用例</td>
-    <td>总计</td>
-    <td>通过</td>
-    <td>失败</td>
-    <td>错误</td>
-    <td>详细</td>
-</tr>
-%(test_list)s
-<tr id='total_row' class="text-center info";font-size: 12px;>
-    <td>总计</td>
-    <td>%(count)s</td>
-    <td>%(Pass)s</td>
-    <td>%(fail)s</td>
-    <td>%(error)s</td>
-    <td>通过率：%(passrate)s</td>
-</tr>
-</table>
-""" # variables: (test_list, count, Pass, fail, error ,passrate)
-
-    REPORT_CLASS_TMPL = r"""
-<tr class='%(style)s'>
-    <td>%(desc)s</td>
-    <td class="text-center">%(count)s</td>
-    <td class="text-center">%(Pass)s</td>
-    <td class="text-center">%(fail)s</td>
-    <td class="text-center">%(error)s</td>
-    <td class="text-center"><a href="javascript:showClassDetail('%(cid)s',%(count)s)" class="detail" id='%(cid)s'>详细</a></td>
-</tr>
-""" # variables: (style, desc, count, Pass, fail, error, cid)
-
-    #有output内容的样式，去掉原来JS效果，美化展示效果  -Findyou v0.8.2.3
-    REPORT_TEST_WITH_OUTPUT_TMPL = r"""
-<tr id='%(tid)s' class='%(Class)s'>
-    <td class='%(style)s'><div class='testcase'>%(desc)s</div></td>
-    <td colspan='5' align='center'>
-    <!--默认收起output信息 -Findyou
-    <button id='btn_%(tid)s' type="button"  class="btn-xs collapsed" data-toggle="collapse" data-target='#div_%(tid)s'>%(status)s</button>
-    <div id='div_%(tid)s' class="collapse">  -->
-
-    <!-- 默认展开output信息 -Findyou -->
-    <button id='btn_%(tid)s' type="button"  class="btn-xs" data-toggle="collapse" data-target='#div_%(tid)s'>%(status)s</button>
-    <div id='div_%(tid)s' class="collapse in">
-    <pre>
-    %(script)s
-    </pre>
-    </div>
-    </td>
-</tr>
-""" # variables: (tid, Class, style, desc, status)
-
-    # 无output内容样式改为button，按钮效果为不可点击  -Findyou v0.8.2.3
-    REPORT_TEST_NO_OUTPUT_TMPL = r"""
-<tr id='%(tid)s' class='%(Class)s'>
-    <td class='%(style)s'><div class='testcase'>%(desc)s</div></td>
-    <td colspan='5' align='center'><button id='btn_%(tid)s' type="button"  class="btn-xs" disabled="disabled" data-toggle="collapse" data-target='#div_%(tid)s'>%(status)s</button></td>
-</tr>
-""" # variables: (tid, Class, style, desc, status)
-
-    REPORT_TEST_OUTPUT_TMPL = r"""
-%(id)s: %(output)s
-""" # variables: (id, output)
-
-    # ------------------------------------------------------------------------
-    # ENDING
-    #
-    # 增加返回顶部按钮  --Findyou
-    ENDING_TMPL = """<div id='ending'>&nbsp;</div>
-    <div style=" position:fixed;right:50px; bottom:30px; width:20px; height:20px;cursor:pointer">
-    <a href="#"><span class="glyphicon glyphicon-eject" style = "font-size:30px;" aria-hidden="true">
-    </span></a></div>
-    """
-
-# -------------------- The end of the Template class -------------------
-
-
-TestResult = unittest.TestResult
-
-class _TestResult(TestResult):
-    # note: _TestResult is a pure representation of results.
-    # It lacks the output and reporting ability compares to unittest._TextTestResult.
-
-    def __init__(self, verbosity=1):
-        TestResult.__init__(self)
-        self.stdout0 = None
-        self.stderr0 = None
-        self.success_count = 0
-        self.failure_count = 0
-        self.error_count = 0
-        self.verbosity = verbosity
-
-        # result is a list of result in 4 tuple
-        # (
-        #   result code (0: success; 1: fail; 2: error),
-        #   TestCase object,
-        #   Test output (byte string),
-        #   stack trace,
-        # )
-        self.result = []
-        #增加一个测试通过率 --Findyou
-        self.passrate=float(0)
-
-
-    def startTest(self, test):
-        TestResult.startTest(self, test)
-        # just one buffer for both stdout and stderr
-        self.outputBuffer = StringIO()
-        stdout_redirector.fp = self.outputBuffer
-        stderr_redirector.fp = self.outputBuffer
-        self.stdout0 = sys.stdout
-        self.stderr0 = sys.stderr
-        sys.stdout = stdout_redirector
-        sys.stderr = stderr_redirector
-
-
-    def complete_output(self):
-        """
-        Disconnect output redirection and return buffer.
-        Safe to call multiple times.
-        """
-        if self.stdout0:
-            sys.stdout = self.stdout0
-            sys.stderr = self.stderr0
-            self.stdout0 = None
-            self.stderr0 = None
-        return self.outputBuffer.getvalue()
-
-
-    def stopTest(self, test):
-        # Usually one of addSuccess, addError or addFailure would have been called.
-        # But there are some path in unittest that would bypass this.
-        # We must disconnect stdout in stopTest(), which is guaranteed to be called.
-        self.complete_output()
-
-
-    def addSuccess(self, test):
-        self.success_count += 1
-        TestResult.addSuccess(self, test)
-        output = self.complete_output()
-        self.result.append((0, test, output, ''))
-        if self.verbosity > 1:
-            sys.stderr.write('ok ')
-            sys.stderr.write(str(test))
-            sys.stderr.write('\n')
-        else:
-            sys.stderr.write('')
-
-    def addError(self, test, err):
-        self.error_count += 1
-        TestResult.addError(self, test, err)
-        _, _exc_str = self.errors[-1]
-        output = self.complete_output()
-        self.result.append((2, test, output, _exc_str))
-        if self.verbosity > 1:
-            sys.stderr.write('E  ')
-            sys.stderr.write(str(test))
-            sys.stderr.write('\n')
-        else:
-            sys.stderr.write('E')
-
-    def addFailure(self, test, err):
-        self.failure_count += 1
-        TestResult.addFailure(self, test, err)
-        _, _exc_str = self.failures[-1]
-        output = self.complete_output()
-        self.result.append((1, test, output, _exc_str))
-        if self.verbosity > 1:
-            sys.stderr.write('F  ')
-            sys.stderr.write(str(test))
-            sys.stderr.write('\n')
-        else:
-            sys.stderr.write('F')
-
-
-# class HTMLTestReportCN(Template_mixin):
-class HTMLTestRunner(Template_mixin):
-    """
-    """
-    def __init__(self, stream=sys.stdout, verbosity=1,title=None,description=None,tester=None):
-        self.stream = stream
-        self.verbosity = verbosity
-        if title is None:
-            self.title = self.DEFAULT_TITLE
-        else:
-            self.title = title
-        if description is None:
-            self.description = self.DEFAULT_DESCRIPTION
-        else:
-            self.description = description
-        if tester is None:
-            self.tester = self.DEFAULT_TESTER
-        else:
-            self.tester = tester
-
-        self.startTime = datetime.datetime.now()
-
-
-    def run(self, test):
-        "Run the given test case or test suite."
-        result = _TestResult(self.verbosity)
-        test(result)
-        self.stopTime = datetime.datetime.now()
-        self.generateReport(test, result)
-        # print >>sys.stderr, '\nTime Elapsed: %s' % (self.stopTime-self.startTime)
-        sys.stderr.write('\nTime Elapsed: %s' % (self.stopTime-self.startTime))
-        return result
-
-
-    def sortResult(self, result_list):
-        # unittest does not seems to run in any particular order.
-        # Here at least we want to group them together by class.
-        rmap = {}
-        classes = []
-        for n,t,o,e in result_list:
-            cls = t.__class__
-            # if not rmap.has_key(cls):
-            if cls not in rmap:
-                rmap[cls] = []
-                classes.append(cls)
-            rmap[cls].append((n,t,o,e))
-        r = [(cls, rmap[cls]) for cls in classes]
-        return r
-
-    #替换测试结果status为通过率 --Findyou
-    def getReportAttributes(self, result):
-        """
-        Return report attributes as a list of (name, value).
-        Override this to add custom attributes.
-        """
-        startTime = str(self.startTime)[:19]
-        duration = str(self.stopTime - self.startTime)
-        status = []
-        status.append('共 %s' % (result.success_count + result.failure_count + result.error_count))
-        if result.success_count: status.append('通过 %s'    % result.success_count)
-        if result.failure_count: status.append('失败 %s' % result.failure_count)
-        if result.error_count:   status.append('错误 %s'   % result.error_count  )
-        if status:
-            status = '，'.join(status)
-        # 合入Github：boafantasy代码
-            if (result.success_count + result.failure_count + result.error_count) > 0:
-                self.passrate = str("%.2f%%" % (float(result.success_count) / float(result.success_count + result.failure_count + result.error_count) * 100))
-            else:
-                self.passrate = "0.00 %"
-        else:
-            status = 'none'
-        return [
-            (u'测试人员', self.tester),
-            (u'开始时间',startTime),
-            (u'合计耗时',duration),
-            (u'测试结果',status + "，通过率= "+self.passrate),
-        ]
-
-
-    def generateReport(self, test, result):
-        report_attrs = self.getReportAttributes(result)
-        generator = 'HTMLTestReportCN %s' % __version__
-        stylesheet = self._generate_stylesheet()
-        heading = self._generate_heading(report_attrs)
-        report = self._generate_report(result)
-        ending = self._generate_ending()
-        output = self.HTML_TMPL % dict(
-            title = saxutils.escape(self.title),
-            generator = generator,
-            stylesheet = stylesheet,
-            heading = heading,
-            report = report,
-            ending = ending,
-        )
-        self.stream.write(output.encode('utf8'))
-
-
-    def _generate_stylesheet(self):
-        return self.STYLESHEET_TMPL
-
-    #增加Tester显示 -Findyou
-    def _generate_heading(self, report_attrs):
-        a_lines = []
-        for name, value in report_attrs:
-            line = self.HEADING_ATTRIBUTE_TMPL % dict(
-                    name = saxutils.escape(name),
-                    value = saxutils.escape(value),
-                )
-            a_lines.append(line)
-        heading = self.HEADING_TMPL % dict(
-            title = saxutils.escape(self.title),
-            parameters = ''.join(a_lines),
-            description = saxutils.escape(self.description),
-            tester= saxutils.escape(self.tester),
-        )
-        return heading
-
-    #生成报告  --Findyou添加注释
-    def _generate_report(self, result):
-        rows = []
-        sortedResult = self.sortResult(result.result)
-        for cid, (cls, cls_results) in enumerate(sortedResult):
-            # subtotal for a class
-            np = nf = ne = 0
-            for n,t,o,e in cls_results:
-                if n == 0: np += 1
-                elif n == 1: nf += 1
-                else: ne += 1
-
-            # format class description
-            if cls.__module__ == "__main__":
-                name = cls.__name__
-            else:
-                name = "%s.%s" % (cls.__module__, cls.__name__)
-            doc = cls.__doc__ and cls.__doc__.split("\n")[0] or ""
-            desc = doc and '%s: %s' % (name, doc) or name
-
-            row = self.REPORT_CLASS_TMPL % dict(
-                style = ne > 0 and 'warning' or nf > 0 and 'danger' or 'success',
-                desc = desc,
-                count = np+nf+ne,
-                Pass = np,
-                fail = nf,
-                error = ne,
-                cid = 'c%s' % (cid+1),
-            )
-            rows.append(row)
-
-            for tid, (n,t,o,e) in enumerate(cls_results):
-                self._generate_report_test(rows, cid, tid, n, t, o, e)
-
-        report = self.REPORT_TMPL % dict(
-            test_list = ''.join(rows),
-            count = str(result.success_count+result.failure_count+result.error_count),
-            Pass = str(result.success_count),
-            fail = str(result.failure_count),
-            error = str(result.error_count),
-            passrate =self.passrate,
-        )
-        return report
-
-
-    def _generate_report_test(self, rows, cid, tid, n, t, o, e):
-        # e.g. 'pt1.1', 'ft1.1', etc
-        has_output = bool(o or e)
-        # ID修改点为下划线,支持Bootstrap折叠展开特效 - Findyou v0.8.2.1
-        #增加error分类 - Findyou v0.8.2.3
-        tid = (n == 0 and 'p' or n == 1 and 'f' or 'e') + 't%s_%s' % (cid + 1, tid + 1)
-        name = t.id().split('.')[-1]
-        doc = t.shortDescription() or ""
-        desc = doc and ('%s: %s' % (name, doc)) or name
-        tmpl = has_output and self.REPORT_TEST_WITH_OUTPUT_TMPL or self.REPORT_TEST_NO_OUTPUT_TMPL
-
-        # utf-8 支持中文 - Findyou
-         # o and e should be byte string because they are collected from stdout and stderr?
-        if isinstance(o, str):
-            # TODO: some problem with 'string_escape': it escape \n and mess up formating
-            # uo = unicode(o.encode('string_escape'))
-            try:
-                uo = o
-            except:
-                uo = o.decode('utf-8')
-        else:
-            uo = o
-        if isinstance(e, str):
-            # TODO: some problem with 'string_escape': it escape \n and mess up formating
-            # ue = unicode(e.encode('string_escape'))
-            try:
-                ue = e
-            except:
-                ue = e.decode('utf-8')
-        else:
-            ue = e
-
-        script = self.REPORT_TEST_OUTPUT_TMPL % dict(
-            id = tid,
-            output = saxutils.escape(uo+ue),
-        )
-
-        row = tmpl % dict(
-            tid = tid,
-            Class = (n == 0 and 'hiddenRow' or 'none'),
-            style = n == 2 and 'errorCase' or (n == 1 and 'failCase' or 'passCase'),
-            desc = desc,
-            script = script,
-            status = self.STATUS[n],
-        )
-        rows.append(row)
-        if not has_output:
-            return
-
-    def _generate_ending(self):
-        return self.ENDING_TMPL
-
-
-##############################################################################
-# Facilities for running tests from the command line
-##############################################################################
-
-# Note: Reuse unittest.TestProgram to launch test. In the future we may
-# build our own launcher to support more specific command line
-# parameters like test title, CSS, etc.
-class TestProgram(unittest.TestProgram):
-    """
-    A variation of the unittest.TestProgram. Please refer to the base
-    class for command line parameters.
-    """
-    def runTests(self):
-        # Pick HTMLTestReportCN as the default test runner.
-        # base class's testRunner parameter is not useful because it means
-        # we have to instantiate HTMLTestReportCN before we know self.verbosity.
-        if self.testRunner is None:
-            self.testRunner = HTMLTestReportCN(verbosity=self.verbosity)
-        unittest.TestProgram.runTests(self)
-
-main = TestProgram
-
-##############################################################################
-# Executing this module from the command line
-##############################################################################
-
-if __name__ == "__main__":
-    main(module=None)
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1610026923005)
+++ b/.idea/modules.xml	(date 1610026923005)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/py_Scripts.iml" filepath="$PROJECT_DIR$/.idea/py_Scripts.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1610026923256)
+++ b/.idea/vcs.xml	(date 1610026923256)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/py_Scripts.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/py_Scripts.iml b/.idea/py_Scripts.iml
new file mode 100644
--- /dev/null	(date 1610026923386)
+++ b/.idea/py_Scripts.iml	(date 1610026923386)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+  <component name="TestRunnerService">
+    <option name="PROJECT_TEST_RUNNER" value="Unittests" />
+  </component>
+</module>
\ No newline at end of file
Index: UI自动化selenium/testCase.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/usr/bin/env python \r\n\"\"\"\r\n@author:闫学雷\r\n@project:PythonYan\r\n@file: testCase.py\r\n@time:2021/1/5 0005\r\n\"\"\"\r\nimport unittest\r\n\r\nclass Test3(unittest.TestCase):\r\n    def test_one(self):\r\n        print('execute test_one')\r\n\r\n    def test_two(self):\r\n        print('execute test_two')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI自动化selenium/testCase.py b/UI自动化selenium/testCase.py
--- a/UI自动化selenium/testCase.py	(revision c5e2c600923ede185edc2c07df7654e1bd59b90c)
+++ b/UI自动化selenium/testCase.py	(date 1610026923476)
@@ -5,6 +5,9 @@
 @file: testCase.py
 @time:2021/1/5 0005
 """
+# unitest -- 单元测试框架
+# https://docs.python.org/zh-cn/3.7/library/unittest.html
+
 import unittest
 
 class Test3(unittest.TestCase):
Index: UI自动化selenium/Testreport.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/usr/bin/env python \r\n\"\"\"\r\n@author:闫学雷\r\n@project:PythonYan\r\n@file: 测试报告.py\r\n@time:2021/1/4 0004\r\n\"\"\"\r\nimport unittest\r\nimport HTMLTestRunnerCN\r\nimport time\r\nfrom UI自动化selenium import testCase\r\n\r\nif __name__ == '__main__':\r\n        suite = unittest.TestSuite()\r\n        # Test3是要测试的类名，test_one是要执行的测试方法\r\n        suite.addTest(testCase.Test3(\"test_one\"))\r\n        suite.addTest(testCase.Test3(\"test_two\"))\r\n\r\n        # 实践中发现执行时的当前路径，不一定是此文件所在的文件夹，所以使用绝对路径\r\n        now = time.strftime(\"%Y-%m-%d_%H-%M-%S\", time.localtime())\r\n        filename = now + \"testReport.html\"\r\n        fp = open(filename , 'wb')\r\n        runner = HTMLTestRunnerCN.HTMLTestRunner(stream=fp, title=\"自动化测试报告\", description=\"详细测试用例结果\")\r\n        runner.run(suite)\r\n        print(\"生产报告成功\")\r\n        fp.close()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI自动化selenium/Testreport.py b/UI自动化selenium/Testreport.py
--- a/UI自动化selenium/Testreport.py	(revision c5e2c600923ede185edc2c07df7654e1bd59b90c)
+++ b/UI自动化selenium/Testreport.py	(date 1610026922343)
@@ -6,7 +6,7 @@
 @time:2021/1/4 0004
 """
 import unittest
-import HTMLTestRunnerCN
+import HTMLTestRunner
 import time
 from UI自动化selenium import testCase
 
@@ -20,7 +20,7 @@
         now = time.strftime("%Y-%m-%d_%H-%M-%S", time.localtime())
         filename = now + "testReport.html"
         fp = open(filename , 'wb')
-        runner = HTMLTestRunnerCN.HTMLTestRunner(stream=fp, title="自动化测试报告", description="详细测试用例结果")
+        runner = HTMLTestRunner.HTMLTestRunner(stream=fp, title="自动化测试报告", description="详细测试用例结果")
         runner.run(suite)
         print("生产报告成功")
         fp.close()
Index: UI自动化selenium/UISelenium.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from selenium import webdriver\r\nimport time\r\n\r\n#  学习地址https://www.jianshu.com/p/1531e12f8852\r\n# https://www.bootwiki.com/selenium/index.html\r\n\r\n# unitest -- 单元测试框架\r\n# https://docs.python.org/zh-cn/3.7/library/unittest.html#\r\n\r\n# 启动浏览器\r\ndriverfile_path = r'D:\\python37\\PythonYan\\chromedriver.exe'\r\nbrowser = webdriver.Chrome(executable_path=driverfile_path) # 声明浏览器\r\nbase_url = 'http://www.baidu.com'\r\nbrowser.maximize_window() #最大化\r\nbrowser.get(base_url) # 访问网页\r\n\r\n# 元素定位\r\ndef test_one():\r\n    browser.find_element_by_id(\"kw\").send_keys(\"selenium\")\r\n    browser.find_element_by_id(\"su\").click()\r\n\r\ndef test_two():\r\n    browser.find_element_by_class_name(\"c-gap-bottom-small\").click()\r\n\r\nif __name__ == '__main__':\r\n    test_one()\r\n    test_two()\r\n    browser.quit()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UI自动化selenium/UISelenium.py b/UI自动化selenium/UISelenium.py
--- a/UI自动化selenium/UISelenium.py	(revision c5e2c600923ede185edc2c07df7654e1bd59b90c)
+++ b/UI自动化selenium/UISelenium.py	(date 1610026923496)
@@ -1,12 +1,10 @@
 from selenium import webdriver
 import time
 
-#  学习地址https://www.jianshu.com/p/1531e12f8852
-# https://www.bootwiki.com/selenium/index.html
+#  selenium学习地址
+#  https://www.jianshu.com/p/1531e12f8852
+#  https://www.bootwiki.com/selenium/index.html
 
-# unitest -- 单元测试框架
-# https://docs.python.org/zh-cn/3.7/library/unittest.html#
-
 # 启动浏览器
 driverfile_path = r'D:\python37\PythonYan\chromedriver.exe'
 browser = webdriver.Chrome(executable_path=driverfile_path) # 声明浏览器
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1610026922478)
+++ b/.idea/misc.xml	(date 1610026922478)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7 (py_Scripts)" project-jdk-type="Python SDK" />
+  <component name="PyCharmProfessionalAdvertiser">
+    <option name="shown" value="true" />
+  </component>
+</project>
\ No newline at end of file
